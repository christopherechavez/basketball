/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package admin;

import admin.User;
import aunthentication.LOGIN1;
import config.connectDB;
import config.passwordHasher;
import java.awt.Color;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author Administrator
 */
public class addreservation extends javax.swing.JFrame {

    /**
     * Creates new form addUser
     */
    public addreservation() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cid = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        status = new javax.swing.JComboBox<>();
        rid = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        add = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        update = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        delete = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        r = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        c = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        back = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        revdate = new javax.swing.JTextField();
        et = new javax.swing.JTextField();
        st = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel8.setText("Reservation ID:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 160, 110, 20));

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel1.setText("End Time:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 70, 20));

        jLabel7.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel7.setText("Reservation Date:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 130, 20));

        cid.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jPanel1.add(cid, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 180, 40));

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel4.setText("Court ID:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, 30));

        status.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Confirm", "Pending", "Cancel" }));
        jPanel1.add(status, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 180, 40));

        rid.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        rid.setEnabled(false);
        jPanel1.add(rid, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 180, 200, 40));

        jLabel10.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel10.setText("Status:");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, 80, 20));

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel5.setText(" ADD RESERVATION");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, -1, -1));

        add.setBackground(new java.awt.Color(51, 51, 51));
        add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addMouseExited(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Add");

        javax.swing.GroupLayout addLayout = new javax.swing.GroupLayout(add);
        add.setLayout(addLayout);
        addLayout.setHorizontalGroup(
            addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
            .addGroup(addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(addLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel11)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        addLayout.setVerticalGroup(
            addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
            .addGroup(addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(addLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel11)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel1.add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 380, 120, 40));

        update.setBackground(new java.awt.Color(51, 51, 51));
        update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                updateMouseExited(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Update");

        javax.swing.GroupLayout updateLayout = new javax.swing.GroupLayout(update);
        update.setLayout(updateLayout);
        updateLayout.setHorizontalGroup(
            updateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
            .addGroup(updateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(updateLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel12)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        updateLayout.setVerticalGroup(
            updateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
            .addGroup(updateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(updateLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel12)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel1.add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 380, 120, 40));

        delete.setBackground(new java.awt.Color(51, 51, 51));
        delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteMouseExited(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Delete");

        javax.swing.GroupLayout deleteLayout = new javax.swing.GroupLayout(delete);
        delete.setLayout(deleteLayout);
        deleteLayout.setHorizontalGroup(
            deleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
            .addGroup(deleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(deleteLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel13)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        deleteLayout.setVerticalGroup(
            deleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
            .addGroup(deleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(deleteLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel13)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel1.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 380, 120, 40));

        r.setBackground(new java.awt.Color(51, 51, 51));
        r.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                rMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                rMouseExited(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Refresh");

        javax.swing.GroupLayout rLayout = new javax.swing.GroupLayout(r);
        r.setLayout(rLayout);
        rLayout.setHorizontalGroup(
            rLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
            .addGroup(rLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(rLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel14)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        rLayout.setVerticalGroup(
            rLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
            .addGroup(rLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(rLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel14)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel1.add(r, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 430, 120, 40));

        c.setBackground(new java.awt.Color(51, 51, 51));
        c.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cMouseExited(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Cancel");

        javax.swing.GroupLayout cLayout = new javax.swing.GroupLayout(c);
        c.setLayout(cLayout);
        cLayout.setHorizontalGroup(
            cLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
            .addGroup(cLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(cLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel15)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        cLayout.setVerticalGroup(
            cLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
            .addGroup(cLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(cLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel15)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel1.add(c, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 430, 120, 40));

        back.setBackground(new java.awt.Color(51, 51, 51));
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backMouseExited(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Back");

        javax.swing.GroupLayout backLayout = new javax.swing.GroupLayout(back);
        back.setLayout(backLayout);
        backLayout.setHorizontalGroup(
            backLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
            .addGroup(backLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(backLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel16)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        backLayout.setVerticalGroup(
            backLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
            .addGroup(backLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(backLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel16)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel1.add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 430, 120, 40));

        revdate.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jPanel1.add(revdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 180, 40));

        et.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jPanel1.add(et, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 180, 40));

        st.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jPanel1.add(st, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 110, 200, 40));

        jLabel6.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel6.setText("Start Time:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 80, 70, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 0, 510, 500));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo basketball 300.jpg"))); // NOI18N
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 480));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 500));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseClicked
        String CourtID = cid.getText().trim();
        String ReservationDate = revdate.getText().trim();
        String StartTime = st.getText().trim();
        String EndTime = et.getText().trim();
        String Status = status.getSelectedItem().toString();

        connectDB connect = new connectDB();

        if (CourtID.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter Court ID!", "Error", JOptionPane.WARNING_MESSAGE);
        } else if (ReservationDate.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter Reservation Date!", "Error", JOptionPane.WARNING_MESSAGE);
        } else if (StartTime.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter Start Time!", "Error", JOptionPane.WARNING_MESSAGE);
        } else if (EndTime.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter End Time!", "Error", JOptionPane.WARNING_MESSAGE);
        } else if (Status.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please select a Status!", "Error", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                // Check if court exists
                if (!connect.fieldExists("courts", "c_id", CourtID)) {
                    JOptionPane.showMessageDialog(null, "Court ID does not exist!", "Error", JOptionPane.WARNING_MESSAGE);
                    return;
                }

//                // Check if there's any overlapping reservation for the same court
//                String checkOverlap = "SELECT * FROM reservations WHERE c_id = ? AND rdate = ? AND ((stime <= ? AND etime > ?) OR (stime < ? AND etime >= ?) OR (stime >= ? AND etime <= ?))";
//                if (connect.(checkOverlap, CourtID, ReservationDate, StartTime, StartTime, EndTime, EndTime, StartTime, EndTime)) {
//                    JOptionPane.showMessageDialog(null, "There is an overlapping reservation for this court!", "Error", JOptionPane.WARNING_MESSAGE);
//                    return;
//                }

                String sql = "INSERT INTO reservations (c_id, rdate, stime, etime, status) VALUES (?, ?, ?, ?, ?)";
                int rowsInserted = connect.insertData(sql, CourtID, ReservationDate, StartTime, EndTime, Status);

                if (rowsInserted > 0) {
                    JOptionPane.showMessageDialog(null, "Reservation added successfully!");
                    new reservation().setVisible(true);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to add reservation!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Database Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_addMouseClicked

    private void addMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseEntered
        add.setBackground(Color.black);
    }//GEN-LAST:event_addMouseEntered

    private void addMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseExited
        add.setBackground(new Color (51,51,51));
    }//GEN-LAST:event_addMouseExited

    private void updateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateMouseClicked
        String CourtID = cid.getText().trim();
        String ReservationDate = revdate.getText().trim();
        String StartTime = st.getText().trim();
        String EndTime = et.getText().trim();
        String Status = status.getSelectedItem().toString();
        String ReservationID = rid.getText().trim();

        connectDB connect = new connectDB();

        if (ReservationID.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please select a reservation to update!", "Error", JOptionPane.WARNING_MESSAGE);
        } else if (CourtID.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter Court ID!", "Error", JOptionPane.WARNING_MESSAGE);
        } else if (ReservationDate.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter Reservation Date!", "Error", JOptionPane.WARNING_MESSAGE);
        } else if (StartTime.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter Start Time!", "Error", JOptionPane.WARNING_MESSAGE);
        } else if (EndTime.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter End Time!", "Error", JOptionPane.WARNING_MESSAGE);
        } else if (Status.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please select a Status!", "Error", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                // Check if court exists
                if (!connect.fieldExists("courts", "c_id", CourtID)) {
                    JOptionPane.showMessageDialog(null, "Court ID does not exist!", "Error", JOptionPane.WARNING_MESSAGE);
                    return;
                }

                // Check if reservation exists
                if (!connect.fieldExists("reservations", "r_id", ReservationID)) {
                    JOptionPane.showMessageDialog(null, "Reservation ID does not exist!", "Error", JOptionPane.WARNING_MESSAGE);
                    return;
                }

                String sql = "UPDATE reservations SET c_id = ?, rdate = ?, stime = ?, etime = ?, status = ? WHERE r_id = ?";
                int rowsUpdated = connect.updateData(sql, CourtID, ReservationDate, StartTime, EndTime, Status, ReservationID);

                if (rowsUpdated > 0) {
                    JOptionPane.showMessageDialog(null, "Reservation updated successfully!");
                    new reservation().setVisible(true);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to update reservation!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Database Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_updateMouseClicked

    private void updateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateMouseEntered
        update.setBackground(Color.black);
    }//GEN-LAST:event_updateMouseEntered

    private void updateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateMouseExited
        update.setBackground(new Color (51,51,51));
    }//GEN-LAST:event_updateMouseExited

    private void deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseClicked
        String ReservationID = rid.getText().trim();

        if (ReservationID.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please select a reservation to delete!", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(null, 
            "Are you sure you want to delete this reservation?", 
            "Confirm Delete", 
            JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            connectDB connect = new connectDB();
            try {
                // Check if reservation exists
                if (!connect.fieldExists("reservations", "r_id", ReservationID)) {
                    JOptionPane.showMessageDialog(null, "Reservation ID does not exist!", "Error", JOptionPane.WARNING_MESSAGE);
                    return;
                }

                String sql = "DELETE FROM reservations WHERE r_id = ?";
                int rowsDeleted = connect.deleteData(sql, ReservationID);

                if (rowsDeleted > 0) {
                    JOptionPane.showMessageDialog(null, "Reservation deleted successfully!");
                    new reservation().setVisible(true);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to delete reservation!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Database Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_deleteMouseClicked

    private void deleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseEntered
        delete.setBackground(Color.black);
    }//GEN-LAST:event_deleteMouseEntered

    private void deleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseExited
        delete.setBackground(new Color (51,51,51));
    }//GEN-LAST:event_deleteMouseExited

    private void rMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rMouseClicked
        AdminDashboardd ad = new AdminDashboardd();
        ad.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_rMouseClicked

    private void rMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rMouseEntered
        r.setBackground(Color.black);
    }//GEN-LAST:event_rMouseEntered

    private void rMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rMouseExited
        r.setBackground(new Color (51,51,51));
    }//GEN-LAST:event_rMouseExited

    private void cMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cMouseClicked
        AdminDashboardd ad = new AdminDashboardd();
        ad.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_cMouseClicked

    private void cMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cMouseEntered
        c.setBackground(Color.black);
    }//GEN-LAST:event_cMouseEntered

    private void cMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cMouseExited
        c.setBackground(new Color (51,51,51));
    }//GEN-LAST:event_cMouseExited

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        User ad = new User();
        ad.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backMouseClicked

    private void backMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseEntered
        back.setBackground(Color.black);
    }//GEN-LAST:event_backMouseEntered

    private void backMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseExited
        back.setBackground(new Color (51,51,51));
    }//GEN-LAST:event_backMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addreservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addreservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addreservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addreservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addreservation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel add;
    private javax.swing.JPanel back;
    private javax.swing.JPanel c;
    public javax.swing.JTextField cid;
    private javax.swing.JPanel delete;
    public javax.swing.JTextField et;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel r;
    public javax.swing.JTextField revdate;
    public javax.swing.JTextField rid;
    public javax.swing.JTextField st;
    public javax.swing.JComboBox<String> status;
    public javax.swing.JPanel update;
    // End of variables declaration//GEN-END:variables
}
